
/**
 * DEV NOTES:
 * ==========
 *
 *
 * BUGS:
 * - FIXED: Escaped HTML in the text causes problems: 1) text() bug; 2) width is wrong;
 *
 * NEED:
 * - Set width option with units, convert value to px (unit-less integer) Currently just 'assuming' px. (Bad!)
 * - DONE: Test chainability
 * - DONE: Use CSS3 text-overflow:ellipsis if possible (IE7-, Safari and Konqueror. Opera needs -o-text-overflow.)
 * - handle overflow:visible if set and white-space:no-wrap if not set in CSS?
 * - DONE: need to check for values like &hellip; not just "..." in the user options, to use native CSS.
 * - DONE: Calling width() is expensive and really affects the table method. Don't truncate from the top but rather
           make an educated and conservative guess, measure and check it, and if it's still too large loop from there.
		   This should vastly improve performance with long(er) texts.
 *
 * WANT:
 * - Move non-essentials to different git branch? Move minified too?
 * - DONE: zero configuration: get width from parent (width and max-Width)
 * - option marquee instead of truncate?
 * - add a test: does the text need to be truncated?
 * - save a value in .data(): "is_truncated"?
 * - handle dynamic/resized widths. store original text in .data()
 **/


/**
 * Notes to M. David Green about original version:
 *
 * If the selector matches multiple objects the plugin fails:
 * All items end up with the same text and content-length, regardless of
 * styling.
 * Solution: Don't use var 'that' in the each loop. Use 'this' to manipulate the
 * current item.
 *
 * Measuring the text width in a table appended to body doesn't work.
 * You need to measure the text in the style context where it is to be
 * displayed. In order for this to work the table elements need to inherit the
 * surrounding text style. (eg: Measuring text that is bold in the original
 * context but non-bold outside will result in text that is too long.)
 *
 * Tips:
 * Don't redeclare vars passed as arguments.
 * Use {border: none;} not {border: 0;}.
 *
 * Also changed the configuration of the plugin:
 * It still allows using width and margin string as arguments, but it can now
 * also be configured using a hash (an object). It is now possible to predefine
 * defaults for all subsequent calls to the plugin (with
 * $.fn.shorten.defaults). It's also possible to get the current plugin
 * options used for any 'truncated' element. (Only the options for the first
 * matched element are returned.)
 *
 * I added a new option 'tooltip', boolean: Only display tooltip if true.
 **/

Crude performance test of the canvas and the table text measuring methods:

jQuery 1.4.2

Canvas 1.17 s
Table 9.93 s
Table (old) 9.96 s

Summary: calling width() is expensive and really affects the table method. don't truncate from the top but rather make an educated and conservative guess, measure and check it, and if it's still too large loop from there. this should vastly improve performance with long(er) texts.

 // keywords: jquery, plugin, truncate, overflow, text-overflow, marquee
